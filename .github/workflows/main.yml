name: Kali VM customization build script

on: workflow_dispatch

#permissions:
#  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install prerequisites
      run: |
        set -xe
        
        # silence APT
        APT_PARAMS='sudo apt -y -q -o=Dpkg::Use-Pty=0'
        
        #$APT_PARAMS update && $APT_PARAMS upgrade && $APT_PARAMS install p7zip-full kpartx unzip zip qemu-utils axel
        $APT_PARAMS update && $APT_PARAMS install p7zip-full kpartx unzip zip qemu-utils axel virtualbox

    - name: Download the VM
      run: |
        set -xe

        sudo mkdir -p /mnt/source
        cd /mnt/source/
        KALI_BASE_ZIP_URL="https://cdimage.kali.org/kali-2024.1/kali-linux-2024.1-virtualbox-amd64.7z"
        KALI_SHA256="80ba5fdd6037f9261a5f49a7f18a0abb231551a1aec2d97da2344c2a0e72ced8"
        
        # testing
        #KALI_BASE_ZIP_URL="http://downloads.sourceforge.net/virtualboximage/debian-3.1r0a-x86-netinstall-2.7z"
        
        KALI_BASE_FULL_FNAME=$(basename $KALI_BASE_ZIP_URL)
        KALI_BASE_FULL_PATH=$(readlink -f $KALI_BASE_FULL_FNAME)
        KALI_BASE_NAME=$(basename $KALI_BASE_FULL_FNAME .7z)

        # downloading
        time sudo axel -q $KALI_BASE_ZIP_URL -o $KALI_BASE_FULL_FNAME

        # verifing the checksum
        echo "$KALI_SHA256 $KALI_BASE_FULL_FNAME" | sha256sum -c

        # extracting the VDI file
        export KALI_EXTRACTED_VDI_DIR="/mnt/extracted/"
        sudo mkdir -p $KALI_EXTRACTED_VDI_DIR

        cd $KALI_EXTRACTED_VDI_DIR
        time sudo 7z l "$KALI_BASE_FULL_PATH"
        time sudo 7z e "$KALI_BASE_FULL_PATH" "-o$KALI_EXTRACTED_VDI_DIR" *.vdi -r
        KALI_VDI_FULL_FNAME=$(basename "$KALI_EXTRACTED_VDI_DIR$KALI_BASE_NAME.vdi")
        KALI_VDI_FULL_PATH=$(readlink -f $KALI_VDI_FULL_FNAME)

        echo "KALI_BASE_FULL_FNAME=$KALI_BASE_FULL_FNAME" >> $GITHUB_ENV
        echo "KALI_BASE_FULL_PATH=$KALI_BASE_FULL_PATH" >> $GITHUB_ENV
        echo "KALI_BASE_NAME=$KALI_BASE_NAME" >> $GITHUB_ENV
        echo "KALI_VDI_FULL_FNAME=$KALI_VDI_FULL_FNAME" >> $GITHUB_ENV
        echo "KALI_VDI_FULL_PATH=$KALI_VDI_FULL_PATH" >> $GITHUB_ENV
        
    - name: Prepare environment 
      run: |
        set -xe
        cd /tmp/
        
        export VDI_ROOT="/mnt/vdi"
        echo "VDI_ROOT=$VDI_ROOT" >> $GITHUB_ENV
        
        sudo mkdir -p $VDI_ROOT
        sudo modprobe nbd max_part=16
        sudo qemu-nbd -c /dev/nbd0 "$KALI_VDI_FULL_PATH"
        sudo kpartx -a /dev/nbd0
        sudo mount /dev/mapper/nbd0p1 $VDI_ROOT
        sudo mount --bind /proc $VDI_ROOT/proc/
        sudo mount --bind /sys $VDI_ROOT/sys/
        sudo mount --bind /dev $VDI_ROOT/dev/
        sudo mount --bind /dev/pts $VDI_ROOT/dev/pts/
        
    - name: Customize the VDI file of the VM - network / dotfiles / shell / venvs / timezone / keymap
      run: |
        set -xe
        cd /tmp/
        
        CHROOT_PARAMS="env DEBIAN_FRONTEND=noninteractive sudo --preserve-env chroot $VDI_ROOT/"
        APT_PARAMS_VDI="apt -y -q -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold"

        echo "CHROOT_PARAMS=$CHROOT_PARAMS" >> $GITHUB_ENV
        echo "APT_PARAMS_VDI=$APT_PARAMS_VDI" >> $GITHUB_ENV

        # set network
        $CHROOT_PARAMS sh -c "echo nameserver 8.8.8.8| tee /etc/resolv.conf"
        
        # customize
        $CHROOT_PARAMS wget -nv "https://github.com/maaaaz/dotfiles/raw/master/.vimrc" -O "/root/.vimrc"
        $CHROOT_PARAMS su kali -c "wget -nv 'https://github.com/maaaaz/dotfiles/raw/master/.vimrc' -O '/home/kali/.vimrc'"
        
        $CHROOT_PARAMS usermod -s "/bin/bash" kali
        $CHROOT_PARAMS usermod -s "/bin/bash" root
        
        # for vbox shared folders
        $CHROOT_PARAMS usermod -a -G vboxsf kali

        # set virtualenvs
        venv_home="grep -i 'workon_home' ~/.bashrc ||  echo 'export WORKON_HOME=~/.virtualenvs' >> ~/.bashrc"
        venv_python="grep -i 'virtualenvwrapper_python' ~/.bashrc || echo 'export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3' >> ~/.bashrc"
        venv_wrapper="grep -i 'virtualenvwrapper.sh' ~/.bashrc ||  echo 'source /usr/share/virtualenvwrapper/virtualenvwrapper.sh' >> ~/.bashrc"
        
        $CHROOT_PARAMS su root -c "$venv_home"
        $CHROOT_PARAMS su kali -c "$venv_home"

        $CHROOT_PARAMS su root -c "$venv_python"
        $CHROOT_PARAMS su kali -c "$venv_python"

        $CHROOT_PARAMS su root -c "$venv_wrapper"
        $CHROOT_PARAMS su kali -c "$venv_wrapper"
        
        $CHROOT_PARAMS su root -c "source ~/.bashrc"
        $CHROOT_PARAMS su kali -c "source ~/.bashrc"
        
        # set french timezone
        $CHROOT_PARAMS rm -rf /etc/localtime
        $CHROOT_PARAMS ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime
        
        # set keyboard azerty
        $CHROOT_PARAMS sh -c "sed -i 's/XKBLAYOUT=\"\w*\"/XKBLAYOUT=\"'fr'\"/g' /etc/default/keyboard"


    - name: Customize the VDI file of the VM - install additional packages
      run: |
        set -xe
        cd /tmp/
        # update the packages
        $CHROOT_PARAMS apt-mark hold grub-pc
        $CHROOT_PARAMS $APT_PARAMS_VDI update

        wget -nv 'https://raw.githubusercontent.com/maaaaz/dotfiles/master/debian_ubuntu_packages.txt' -O '/tmp/debian_ubuntu_packages.txt'
        $CHROOT_PARAMS $APT_PARAMS_VDI install $(cat '/tmp/debian_ubuntu_packages.txt')
        
        wget -nv 'https://raw.githubusercontent.com/maaaaz/dotfiles/master/kali_missing_packages.txt' -O '/tmp/kali_missing_packages.txt'
        $CHROOT_PARAMS $APT_PARAMS_VDI install $(cat '/tmp/kali_missing_packages.txt') 

        # install non-packaged useful tools
        $CHROOT_PARAMS mkdir -p /opt/escobar/
        $CHROOT_PARAMS wget -nv 'https://github.com/savely-krasovsky/escobar/releases/download/v3.0.1/escobar-3.0.1-linux-amd64.tar.gz' -O '/opt/escobar/escobar-3.0.1-linux-amd64.tar.gz'
        $CHROOT_PARAMS tar -xvf '/opt/escobar/escobar-3.0.1-linux-amd64.tar.gz' --directory '/opt/escobar/'

        ##################################
        # TODO HERE: upgrade the vbox additions
        ##################################

    - name: Customize the VDI file of the VM - full package upgrade
      run: |
        set -xe
        # full-upgrade of packages
        $CHROOT_PARAMS $APT_PARAMS_VDI full-upgrade

        # clean apt
        $CHROOT_PARAMS $APT_PARAMS_VDI autoremove --purge
        $CHROOT_PARAMS $APT_PARAMS_VDI autoclean
        $CHROOT_PARAMS $APT_PARAMS_VDI clean

        # unhold grub
        $CHROOT_PARAMS apt-mark unhold grub-pc

    - name: Customize the VDI file of the VM - disable services
      run: |
        set -xe
        # remove network
        $CHROOT_PARAMS rm -rf "/etc/resolv.conf"

        # disable services
        $CHROOT_PARAMS systemctl list-unit-files --no-pager
        
        $CHROOT_PARAMS systemctl stop rpcbind.socket
        $CHROOT_PARAMS systemctl mask rpcbind.socket

        $CHROOT_PARAMS systemctl stop rpcbind
        $CHROOT_PARAMS systemctl mask rpcbind
        
        $CHROOT_PARAMS systemctl stop xrdp
        $CHROOT_PARAMS systemctl mask xrdp

        $CHROOT_PARAMS systemctl stop systemd-resolved.service
        $CHROOT_PARAMS systemctl mask systemd-resolved.service

        $CHROOT_PARAMS systemctl stop tftpd-hpa.service
        $CHROOT_PARAMS systemctl mask tftpd-hpa.service

        # list installed packages
        KALI_VDI_INSTALLED_PACKAGES="/tmp/installed_packages.txt"
        echo "KALI_VDI_INSTALLED_PACKAGES=$KALI_VDI_INSTALLED_PACKAGES" >> $GITHUB_ENV
        
        $CHROOT_PARAMS dpkg -l | grep '^ii' | awk '{print $2 "\t" $3}' | column -t > $KALI_VDI_INSTALLED_PACKAGES
        
        
    - name: Unprepare environment 
      run: |
        set -xe
        cd /tmp/

        echo "[+] findmnt before unmount"
        findmnt
        echo
        
        sudo umount $VDI_ROOT/proc/
        sudo umount $VDI_ROOT/sys/
        sudo umount $VDI_ROOT/dev/pts/
        sudo umount $VDI_ROOT/dev/
        sudo umount $VDI_ROOT

        sudo qemu-nbd -d /dev/nbd0

        echo "[+] findmnt after unmount"
        findmnt
        echo

    - name: Compact the VDI file
      run: |
        set -xe
        
        sudo ls -alh $KALI_VDI_FULL_PATH
        sudo vboxmanage modifymedium --compact "$KALI_VDI_FULL_PATH"
        sudo ls -alh $KALI_VDI_FULL_PATH

    - name: Create a new release 
      run: |
        set -xe

        cd /tmp/
        curl -LOs https://archive.org/download/ia-pex/ia
        chmod +x ia
        ./ia help

        cd /mnt/
        SHA256SUM="$VDI_ROOT/sha256sum_iso.txt"
        KALI_CUSTOM_7Z="$VDI_ROOT/$KALI_BASE_NAME-maaaaz-edition-$(date '+%Y%m%d').7z"
        time sudo 7z a "$KALI_CUSTOM_7Z" "$KALI_VDI_FULL_PATH"
        sha256sum --tag $KALI_CUSTOM_7Z | tee $SHA256SUM
        sudo ls -alh $KALI_CUSTOM_7Z
